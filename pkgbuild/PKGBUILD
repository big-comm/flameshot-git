# Maintainer: Tales A. Mendon√ßa <talesam@gmail.com>
# Original Maintainer: Jeremy Borgman 
# Original Maintainer: Mehrad Mahmoudian 
# Original Contributor: Feresey 
# Original Contributor: j1simon 

pkgname=flameshot-git
pkgdesc="Powerful yet simple to use screenshot software"
pkgver=$(date +%y.%m.%d)
pkgrel=$(date +%H%M)
arch=('i686' 'x86_64')
license=('GPL')
url="https://github.com/flameshot-org/flameshot"

# Flameshot specific dependencies
depends=(qt5-base hicolor-icon-theme qt5-svg kguiaddons5 qt5-wayland)
makedepends=(qt5-tools git cmake)
optdepends=('xdg-desktop-portal: To make Sway, Hyprland, and wlroots work'
            'xdg-desktop-portal-wlr: To make Sway, Hyprland, and wlroots work'
            'grim: To make Sway, Hyprland, and wlroots work'
            'xdg-desktop-portal-kde: For KDE Plasma')
provides=(flameshot)
conflicts=(flameshot)

source=("git+https://github.com/flameshot-org/flameshot.git#branch=master")
md5sums=('SKIP')

# Automatically detect and use the correct install file
if [ -e "${pkgname}.install" ]; then
    install=${pkgname}.install
elif [ -e "pkgbuild.install" ]; then
    install=pkgbuild.install
fi

prepare() {
    cd "${srcdir}/flameshot"
    # Add any preparation steps here, if needed
    # For example: patch -p1 < "${srcdir}/patch-file.patch"
}

build() {
    cd "${srcdir}/flameshot"
    
    # Flameshot specific cmake build
    cmake -S ./ \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DUSE_WAYLAND_CLIPBOARD=1 \
        -DUSE_WAYLAND_GRIM=true

    make -j$(nproc --ignore 1)
}

check() {
    cd "${srcdir}/flameshot"
    # Add check/test steps here, if needed
    # For example: make check
}

package() {
    cd "${srcdir}/flameshot"

    # Flameshot specific install
    make DESTDIR="${pkgdir}" install

    # Determine the correct source directory (maintaining template logic)
    local actual_srcdir
    if [ -d "${srcdir}/flameshot/flameshot" ]; then
        actual_srcdir="${srcdir}/flameshot/flameshot"
    else
        actual_srcdir="${srcdir}/flameshot"
    fi

    # Install additional files from template logic
    local dirs=("usr" "etc" "opt")
    for dir in "${dirs[@]}"; do
        if [ -d "${actual_srcdir}/${dir}" ]; then
            cp -a "${actual_srcdir}/${dir}" "${pkgdir}/"
        fi
    done

    # Install license file if present (template logic)
    if [ -f "${actual_srcdir}/LICENSE" ]; then
        install -Dm644 "${actual_srcdir}/LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
    fi

    # Install documentation if present (template logic)
    if [ -f "${actual_srcdir}/README.md" ]; then
        install -Dm644 "${actual_srcdir}/README.md" "${pkgdir}/usr/share/doc/${pkgname}/README.md"
    fi
}